spring:
  config:
    activate:
      on-profile: local

  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://${LOCAL_DATABASE_URL}/postgres?currentSchema=logly
      username: ${LOCAL_DATABASE_USERNAME}
      password: ${LOCAL_DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: LoglyConnectionPool
      minimum-idle: 10 # 최소 커넥션
      maximum-pool-size: 50 # 최대 커넥션
      idle-timeout: 60000
      connection-timeout: 30000
      # PostgreSQL 전용 설정
      connection-test-query: SELECT 1
      leak-detection-threshold: 60000

  sql:
    init:
      mode: never
    log:
      format: true
    statements: true

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      default_schema: logly

---
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=logly
    username: jungmini
    password: qwer1234
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      default_schema: logly
      ddl-auto: create

---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://${PROD_DATABASE_URL}/postgres?currentSchema=logly
      username: ${PROD_DATABASE_USERNAME}
      password: ${PROD_DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: LoglyConnectionPool
      minimum-idle: 10 # 최소 커넥션
      maximum-pool-size: 50 # 최대 커넥션
      idle-timeout: 60000
      connection-timeout: 30000
      # PostgreSQL 전용 설정
      connection-test-query: SELECT 1
      leak-detection-threshold: 60000

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      default_schema: logly
