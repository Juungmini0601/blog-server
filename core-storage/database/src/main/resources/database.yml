spring:
  config:
    activate:
      on-profile: local

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
#        format_sql: true
#        show_sql: true

  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://${LOCAL_DATABASE_URL}/postgres?currentSchema=logly
      username: ${LOCAL_DATABASE_USERNAME}
      password: ${LOCAL_DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: LoglyConnectionPool
      minimum-idle: 10 # 최소 커넥션
      maximum-pool-size: 50 # 최대 커넥션
      idle-timeout: 60000
      connection-timeout: 30000
      # PostgreSQL 전용 설정
      connection-test-query: SELECT 1
      leak-detection-threshold: 60000

---
spring:
  config:
    activate:
      on-profile: test

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=logly
    username: jungmini
    password: qwer1234
    driver-class-name: org.postgresql.Driver

---
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        show_sql: false

  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://${PROD_DATABASE_URL}/postgres?currentSchema=logly
      username: ${PROD_DATABASE_USERNAME}
      password: ${PROD_DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: LoglyConnectionPool
      minimum-idle: 10 # 최소 커넥션
      maximum-pool-size: 50 # 최대 커넥션
      idle-timeout: 60000
      connection-timeout: 30000
      # PostgreSQL 전용 설정
      connection-test-query: SELECT 1
      leak-detection-threshold: 60000